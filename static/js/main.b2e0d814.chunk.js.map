{"version":3,"sources":["Dashboard/Dashboard.module.css","Balance/Balance.module.css","Controls/Controls.module.css","TransactionHistory/TransactionHistory.module.css","Controls/Controls.jsx","Balance/Balance.jsx","TransactionHistory/TransactionHistory.jsx","Dashboard/Dashboard.jsx","App.js","index.js"],"names":["module","exports","Controls","state","value","reset","setState","handleChange","bind","event","this","target","className","styles","controls","type","min","name","input","onChange","button","onClick","props","onDeposit","onWithdraw","Component","Balance","balance","income","expenses","TransactionHistory","history","thead","tbody","items","map","item","key","id","amount","date","Dashboard","transactions","notifyA","toast","notifyB","notifyD","saveTransaction","shortid","generate","Date","toLocaleString","Number","countIncome","countExpenses","totalDepositSum","filter","transaction","reduce","acc","totalWithdrawalSum","Transactions","localStorage","getItem","Income","Expenses","JSON","parse","prevProps","prevState","setItem","stringify","dashboard","App","ReactDOM","render","document","getElementById"],"mappings":"wIACAA,EAAOC,QAAU,CAAC,UAAY,+B,mBCA9BD,EAAOC,QAAU,CAAC,QAAU,2B,sDCA5BD,EAAOC,QAAU,CAAC,SAAW,2BAA2B,MAAQ,wBAAwB,OAAS,2B,kBCAjGD,EAAOC,QAAU,CAAC,QAAU,oCAAoC,MAAQ,kCAAkC,MAAQ,oC,mLC8BnGC,E,2MArBXC,MAAQ,CAAEC,MAAO,I,EAMjBC,MAAQ,WACJ,EAAKC,SAAS,CAAEF,MAAO,M,EAG3BG,aAAe,EAAKA,aAAaC,KAAlB,gB,4EARFC,GACTC,KAAKJ,SAAS,CAAEF,MAAOK,EAAME,OAAOP,U,+BAS9B,IAAD,OACL,OAAO,6BAASQ,UAAWC,IAAOC,UAC9B,2BAAOC,KAAK,SAASC,IAAI,IAAIC,KAAK,SAASL,UAAWC,IAAOK,MAAOd,MAAOM,KAAKP,MAAMC,MAAOe,SAAUT,KAAKH,eAC5G,4BAAQQ,KAAK,SAASH,UAAWC,IAAOO,OAAQC,QAAS,kBAAM,EAAKC,MAAMC,UAAU,EAAKpB,MAAMC,MAAO,EAAKC,SAA3G,WACA,4BAAQU,KAAK,SAASH,UAAWC,IAAOO,OAAQC,QAAS,kBAAM,EAAKC,MAAME,WAAW,EAAKrB,MAAMC,MAAO,EAAKC,SAA5G,iB,GAtBWoB,a,iBCaRC,EAbC,SAACJ,GAAD,OACZ,6BAASV,UAAWC,IAAOc,SACvB,6CAAUL,EAAMM,OAAhB,KACA,6CAAUN,EAAMO,SAAhB,KACA,0CAAgBP,EAAMK,QAAtB,O,gBCuBOG,EA1BY,SAACR,GAAD,OACvB,2BAAOV,UAAWC,IAAOkB,SACrB,2BAAOnB,UAAWC,IAAOmB,OACrB,4BACI,2CACA,sCACA,sCAGR,2BAAOpB,UAAWC,IAAOoB,OACpBX,EAAMY,MAAMC,KAAI,SAAAC,GAAI,OACjB,wBAAIC,IAAKD,EAAKE,GAAI1B,UAAWC,IAAOoB,OAChC,4BAAMG,EAAKrB,MACX,4BAAMqB,EAAKG,OAAX,KACA,4BAAMH,EAAKI,a,OCqGhBC,G,iNA9GXtC,MAAQ,CACJoC,OAAQ,EACRG,aAAc,GACdf,QAAS,EACTC,OAAQ,EACRC,SAAU,G,EA4Bdc,QAAU,kBAAMC,YAAM,gN,EACtBC,QAAU,kBAAMD,YAAM,sS,EACtBE,QAAU,kBAAMF,YAAM,6N,EAEtBG,gBAAkB,SAACR,EAAQxB,GAOvB,MANuB,CACnBuB,GAAIU,IAAQC,WACZT,MAAM,IAAIU,MAAOC,iBACjBZ,OAAQA,EACRxB,KAAMA,I,EAKdQ,UAAY,SAACgB,EAAQlC,GACF,KAAXkC,EAGEA,GAAU,EACZ,EAAKO,UAEHP,EAAS,IACX,EAAKjC,UAAS,gBAAGoC,EAAH,EAAGA,aAAcf,EAAjB,EAAiBA,QAAjB,MAAgC,CAC1Ce,aAAa,GAAD,mBAAMA,GAAN,CAAoB,EAAKK,gBAAgBR,EAAQ,aAC7DZ,QAASyB,OAAOzB,GAAWyB,OAAOb,OAEtC,EAAKc,YAAY,EAAKlD,MAAMuC,aAAcH,GAC1ClC,KAXA,EAAKsC,W,EAebnB,WAAa,SAACe,EAAQlC,GACH,KAAXkC,EAGE,EAAKpC,MAAMwB,QAAUY,EACvB,EAAKM,UAEHN,EAAS,EACX,EAAKO,UAEH,EAAK3C,MAAMwB,SAAWY,IACxB,EAAKjC,UAAS,gBAAGoC,EAAH,EAAGA,aAAcf,EAAjB,EAAiBA,QAAjB,MAAgC,CAC1Ce,aAAa,GAAD,mBAAMA,GAAN,CAAoB,EAAKK,gBAAgBR,EAAQ,gBAC7DZ,QAASyB,OAAOzB,GAAWyB,OAAOb,OAEtC,EAAKe,cAAc,EAAKnD,MAAMuC,aAAcH,GAC5ClC,KAdA,EAAKsC,W,EAkBbU,YAAc,SAACX,EAAcH,GACzB,IAAMgB,EAAkB,YAAIb,EAAac,QAAO,SAAAC,GAAW,MAAyB,YAArBA,EAAY1C,SACzE2C,QAAO,SAACC,EAAKF,GACX,OAAQL,OAAOO,GAAOP,OAAOK,EAAYlB,UAC1Ca,OAAOb,IACV,EAAKjC,SAAS,CAAEsB,OAAQ2B,K,EAG5BD,cAAgB,SAACZ,EAAcH,GAC3B,IAAMqB,EAAqB,YAAIlB,EAAac,QAAO,SAAAC,GAAW,MAAyB,eAArBA,EAAY1C,SACzE2C,QAAO,SAACC,EAAKF,GACV,OAAQL,OAAOO,GAAOP,OAAOK,EAAYlB,UAC1Ca,OAAOb,IACd,EAAKjC,SAAS,CAAEuB,SAAU+B,K,mFAxF1B,IAAMC,EAAeC,aAAaC,QAAQ,gBACpCrC,EAAUoC,aAAaC,QAAQ,WAC/BC,EAASF,aAAaC,QAAQ,UAC9BE,EAAWH,aAAaC,QAAQ,YAClCF,GACAnD,KAAKJ,SAAS,CACVoC,aAAcwB,KAAKC,MAAMN,GACzBlC,QAASuC,KAAKC,MAAMzC,GACpBE,OAAQsC,KAAKC,MAAMH,GACnBnC,SAAUqC,KAAKC,MAAMF,O,yCAKdG,EAAWC,GAAY,IAAD,EACe3D,KAAKP,MAAjDuC,EAD6B,EAC7BA,aAAcf,EADe,EACfA,QAASC,EADM,EACNA,OAAQC,EADF,EACEA,SACnCwC,EAAU3B,eAAiBhC,KAAKP,MAAMuC,eACtCoB,aAAaQ,QAAQ,eAAgBJ,KAAKK,UAAU7B,IACpDoB,aAAaQ,QAAQ,UAAWJ,KAAKK,UAAU5C,IAC/CmC,aAAaQ,QAAQ,SAAUJ,KAAKK,UAAU3C,IAC9CkC,aAAaQ,QAAQ,WAAYJ,KAAKK,UAAU1C,O,+BAwEpD,OAAO,yBAAKjB,UAAWC,IAAO2D,WAC1B,kBAAC,EAAD,CAAUjD,UAAWb,KAAKa,UAAWC,WAAYd,KAAKc,aACtD,kBAAC,EAAD,CAASG,QAASjB,KAAKP,MAAMwB,QAASC,OAAQlB,KAAKP,MAAMyB,OAAQC,SAAUnB,KAAKP,MAAM0B,WACtF,kBAAC,EAAD,CAAoBK,MAAOxB,KAAKP,MAAMuC,eACtC,kBAAC,IAAD,W,GA1GYjB,cCJTgD,EAFH,kBAAM,kBAAC,EAAD,OCClBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.b2e0d814.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dashboard\":\"Dashboard_dashboard__3RCjr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"balance\":\"Balance_balance__ad2bo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"controls\":\"Controls_controls__2PVf0\",\"input\":\"Controls_input__1lGLk\",\"button\":\"Controls_button__2yI3E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"history\":\"TransactionHistory_history__9BoVj\",\"thead\":\"TransactionHistory_thead__3_eib\",\"tbody\":\"TransactionHistory_tbody__TBjhV\"};","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Controls.module.css';\n\nclass Controls extends Component {\n    static propTypes = {\n        onDeposit: PropTypes.func.isRequired,\n        onWithdraw: PropTypes.func.isRequired\n    }\n\n    state = { value: \"\" }\n\n    handleChange(event) {\n        this.setState({ value: event.target.value });\n    }\n\n    reset = () => {\n        this.setState({ value: '' });\n    }\n\n    handleChange = this.handleChange.bind(this);\n\n    render() {\n        return <section className={styles.controls} >\n            <input type=\"number\" min=\"0\" name=\"amount\" className={styles.input} value={this.state.value} onChange={this.handleChange} />\n            <button type=\"button\" className={styles.button} onClick={() => this.props.onDeposit(this.state.value, this.reset)}>Deposit</button>\n            <button type=\"button\" className={styles.button} onClick={() => this.props.onWithdraw(this.state.value, this.reset)}>Withdraw</button>\n        </section>\n    }\n};\n\nexport default Controls;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Balance.module.css';\n\nconst Balance = (props) => (\n    <section className={styles.balance}>\n        <span >⬆️{props.income}$</span>\n        <span >⬇️{props.expenses}$</span>\n        <span>Balance: {props.balance}$</span>\n    </section>\n);\n\nBalance.propTypes = {\n    balance: PropTypes.number.isRequired,\n    income: PropTypes.number.isRequired,\n    expenses: PropTypes.number.isRequired,\n};\nexport default Balance;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './TransactionHistory.module.css';\n\n\nconst TransactionHistory = (props) => (\n    <table className={styles.history}>\n        <thead className={styles.thead}>\n            <tr>\n                <th>Transaction</th>\n                <th>Amount</th>\n                <th>Date</th>\n            </tr>\n        </thead>\n        <tbody className={styles.tbody}>\n            {props.items.map(item => (\n                <tr key={item.id} className={styles.tbody}>\n                    <td >{item.type}</td>\n                    <td >{item.amount}$</td>\n                    <td >{item.date}</td>\n                </tr>\n            ))}\n        </tbody>\n    </table>\n);\n\nTransactionHistory.propTypes = {\n    items: PropTypes.array.isRequired,\n};\n\n\nexport default TransactionHistory;","import React, { Component } from 'react';\nimport shortid from 'shortid';\nimport styles from './Dashboard.module.css';\nimport Controls from '../Controls/Controls';\nimport Balance from '../Balance/Balance';\nimport TransactionHistory from '../TransactionHistory/TransactionHistory';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nclass Dashboard extends Component {\n    state = {\n        amount: 0,\n        transactions: [],\n        balance: 0,\n        income: 0,\n        expenses: 0,\n    };\n\n    componentDidMount() {\n        const Transactions = localStorage.getItem('transactions');\n        const Balance = localStorage.getItem('balance');\n        const Income = localStorage.getItem('income');\n        const Expenses = localStorage.getItem('expenses');\n        if (Transactions) {\n            this.setState({\n                transactions: JSON.parse(Transactions),\n                balance: JSON.parse(Balance),\n                income: JSON.parse(Income),\n                expenses: JSON.parse(Expenses),\n            })\n        }\n    };\n\n    componentDidUpdate(prevProps, prevState) {\n        const { transactions, balance, income, expenses } = this.state;\n        if (prevState.transactions !== this.state.transactions) {\n            localStorage.setItem('transactions', JSON.stringify(transactions));\n            localStorage.setItem('balance', JSON.stringify(balance));\n            localStorage.setItem('income', JSON.stringify(income));\n            localStorage.setItem('expenses', JSON.stringify(expenses));\n        }\n    };\n\n    notifyA = () => toast('Введите сумму для проведения операции!');\n    notifyB = () => toast('На счету недостаточно средств для проведения операции!');\n    notifyD = () => toast('Сумма транзакции должна быть больше нуля!');\n\n    saveTransaction = (amount, type) => {\n        const newTransaction = {\n            id: shortid.generate(),\n            date: new Date().toLocaleString(),\n            amount: amount,\n            type: type,\n        };\n        return newTransaction;\n    };\n\n    onDeposit = (amount, reset) => {\n        if (amount === \"\") {\n            this.notifyA();\n            return;\n        } if (amount <= 0) {\n            this.notifyD();\n            return;\n        } if (amount > 0) {\n            this.setState(({ transactions, balance }) => ({\n                transactions: [...transactions, this.saveTransaction(amount, \"Deposit\")],\n                balance: Number(balance) + Number(amount),\n            }));\n            this.countIncome(this.state.transactions, amount);\n            reset();\n        }\n    };\n\n    onWithdraw = (amount, reset) => {\n        if (amount === \"\") {\n            this.notifyA();\n            return;\n        } if (this.state.balance < amount) {\n            this.notifyB();\n            return;\n        } if (amount < 0) {\n            this.notifyD();\n            return;\n        } if (this.state.balance >= amount) {\n            this.setState(({ transactions, balance }) => ({\n                transactions: [...transactions, this.saveTransaction(amount, \"Withdrawal\")],\n                balance: Number(balance) - Number(amount),\n            }));\n            this.countExpenses(this.state.transactions, amount);\n            reset();\n        }\n    };\n\n    countIncome = (transactions, amount) => {\n        const totalDepositSum = [...transactions.filter(transaction => transaction.type === \"Deposit\")\n        ].reduce((acc, transaction) => {\n            return (Number(acc) + Number(transaction.amount));\n        }, Number(amount));\n        this.setState({ income: totalDepositSum });\n    };\n\n    countExpenses = (transactions, amount) => {\n        const totalWithdrawalSum = [...transactions.filter(transaction => transaction.type === \"Withdrawal\")]\n            .reduce((acc, transaction) => {\n                return (Number(acc) + Number(transaction.amount));\n            }, Number(amount));\n        this.setState({ expenses: totalWithdrawalSum });\n    };\n\n    render() {\n        return <div className={styles.dashboard}>\n            <Controls onDeposit={this.onDeposit} onWithdraw={this.onWithdraw} />\n            <Balance balance={this.state.balance} income={this.state.income} expenses={this.state.expenses} />\n            <TransactionHistory items={this.state.transactions} />\n            <ToastContainer />\n        </div>\n    };\n};\n\nexport default Dashboard;","import React from 'react';\nimport Dashboard from './Dashboard/Dashboard';\n\nconst App = () => <Dashboard />;\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}